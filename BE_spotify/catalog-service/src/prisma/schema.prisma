generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model album_songs {
  id       Int    @id @default(autoincrement())
  album_id Int
  song_id  Int
  albums   albums @relation(fields: [album_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  songs    songs  @relation(fields: [song_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model albums {
  id           Int           @id @default(autoincrement())
  title        String        @db.VarChar(100)
  release_date DateTime?     @db.Date
  album_songs  album_songs[]
  songs        songs[]
}

model artist_genres {
  id        Int     @id @default(autoincrement())
  artist_id Int
  genre_id  Int
  artists   artists @relation(fields: [artist_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  genres    genres  @relation(fields: [genre_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model artists {
  id            Int             @id @default(autoincrement())
  artist_name   String          @db.VarChar(100)
  bio           String?
  artist_genres artist_genres[]
  song_artists  song_artists[]
}

model genres {
  id            Int             @id @default(autoincrement())
  genre_name    String          @db.VarChar(50)
  artist_genres artist_genres[]
  songs         songs[]
}

model song_artists {
  id        Int     @id @default(autoincrement())
  song_id   Int
  artist_id Int
  artists   artists @relation(fields: [artist_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  songs     songs   @relation(fields: [song_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model songs {
  id           Int            @id @default(autoincrement())
  song_name    String         @db.VarChar(100)
  description  String?
  album_id     Int?
  duration     DateTime?      @db.Time(6)
  release_date DateTime?      @db.Date
  image        String?        @db.VarChar(255)
  genre_id     Int?
  album_songs  album_songs[]
  song_artists song_artists[]
  genres       genres?        @relation(fields: [genre_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_genre")
  albums       albums?        @relation(fields: [album_id], references: [id], onUpdate: NoAction)
}
